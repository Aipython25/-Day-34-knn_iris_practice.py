{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"private_outputs":true,"provenance":[],"authorship_tag":"ABX9TyPJn7i6qOKGv9VW56aOZK+4"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"GWbeui-5ILu1"},"outputs":[],"source":["\n","# step 1: Libraries import karo\n","from sklearn.datasets import load_iris\n","from sklearn.model_selection import train_test_split\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.metrics import accuracy_score\n","# step 2: Dataset load karo\n","iris = load_iris()\n","X = iris.data\n","y = iris.target\n"," # step 3: Train- test split\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)\n","#step 4: model bano\n","model = KNeighborsClassifier(n_neighbors=3)\n","# k = 3 liya gya hai\n","model.fit(X_train, y_train)\n","# step 5 prediction karo\n","y_pred = model.predict(X_test)\n","#step 6: Accuracy chack kare\n","accuracy = accuracy_score(y_test, y_pred)\n","print(\"Accuracy:\", accuracy)"]},{"cell_type":"code","source":["from sklearn.metrics import confusion_matrix\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","model = KNeighborsClassifier (n_neighbors=3)\n","model.fit(X_train, y_train)\n","y_pred = model.predict(X_test)\n","cm = confusion_matrix(y_test, y_pred)\n","# confusion matrix plot\n","sns.heatmap(cm, annot= True, cmap=\"Blues\", xticklabels=iris.target_names, yticklabels=iris.target_names)\n","plt.xlabel(\"Predicted\")\n","plt.ylabel(\"Actual\")\n","plt.title(\"Confusion Matrix\")\n","plt.show( )"],"metadata":{"id":"aCvxH5I_l5Y0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.datasets import load_iris\n","from sklearn.model_selection import train_test_split\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.metrics import accuracy_score\n","iris = load_iris()\n","X = iris.data\n","y = iris.target\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","for k in range(1, 11):\n","    model = KNeighborsClassifier(n_neighbors=k)\n","    model.fit(X_train, y_train)\n","    y_pred = model.predict(X_test)\n","    acc = accuracy_score(y_test, y_pred)\n","    print(f\"K = {k}  Accuracy = {acc}\")"],"metadata":{"id":"8XvXn-x8Vh_u"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model = KNeighborsClassifier(n_neighbors=3)\n","model.fit(X_train, y_train)\n","# sepal_width, petal_length, petal_width\n","new_flower = [[5.1, 3.5, 1.4, 0.2]]\n","prediction = model.predict(new_flower)\n","print(\"Predicted Class Index:\", prediction[0])\n","print(\"Predicted Class Name: \", iris.target_names[prediction[0]])"],"metadata":{"id":"Qd2PS2-Hd6jy"},"execution_count":null,"outputs":[]}]}